* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

.container {
    display: grid;
    grid-template: min-content 1fr / 1fr;
    height: 100vh;

    transition: filter 0.2s;
}

body:has(.modal:not(.hidden)) > .container {
    filter: brightness(0.5);
}

header {
    padding: 20px 40px;
    color: white;
    background-color: blue;
}

main {
    padding: 20px;

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(30ch, 1fr));
    grid-auto-rows: 40ch;
    justify-items: center;
    gap: 20px;

    background-color: slategray;
    box-shadow: inset 0 5px 5px rgba(0, 0, 0, 0.2);

    --width: 253px;
    --height: 360px;
}

.book-button {
    width: var(--width);
    height: var(--height);
    
    border-radius: 10px;
    border: white dashed 4px;
    background-color: rgba(255, 255, 255, 0.1);

    color: white;

    display: flex;
    justify-content: center;
    align-items: center;

    cursor: pointer;
    transition: background-color 0.1s, scale 0.3s;
}

.book-button:hover {
    background-color: rgba(255, 255, 255, 0.2);
    scale: 1.05;
}

.book {
    position: relative;
    width: var(--width);
    height: var(--height);

    --angle: 0;
    --thickness: 32px;
    --color: brown;
    --border-color: black;
    --border-width: 5px;

    transition-property: scale;
    transition-duration: 0.5s;
}

.book:hover {
    --angle: 1;
    scale: 1.05;
}

.book .cover {
    position: absolute;
    padding: 20px;
    width: 100%;
    height: 100%;
    transform: rotateY(calc(var(--angle) * 180deg)) translateZ(calc(var(--thickness) / 2));
    z-index: calc(100 - var(--angle) * 100);

    border-left: solid black 10px;
    border-radius: 0 10px 10px 0;
    background-color: var(--color);
    box-shadow: inset var(--border-color) 0 0 var(--border-width);

    transition-property: var(--angle);
    transition-duration: 0.5s;
}

.book .back {
    display: grid;
    grid-template-rows: 1fr min-content;
    gap: 10px;

    position: absolute;
    padding: 20px;
    width: 100%;
    height: 100%;
    transform: rotateY(calc(var(--angle) * 180deg - 180deg)) translateZ(calc(var(--thickness) / 2));
    z-index: calc(var(--angle) * 100);

    border-right: solid black 10px;
    border-radius: 10px 0 0 10px;
    background-color: var(--color);
    box-shadow: inset var(--border-color) 0 0 var(--border-width);

    transition-property: var(--angle);
    transition-duration: 0.5s;
}

.back p {
    overflow: auto;
}

.book-actions {
    display: flex;
    justify-content: right;
}

.book-actions button {
    background-color: transparent;
    border: none;
    width: 40px;
    height: 40px;
}

.book-actions button:hover {
    opacity: 0.75;
}

.book .spine {
    position: absolute;
    width: calc(var(--thickness));
    height: 100%;
    transform: translateX(calc(var(--width) / 2 - var(--thickness) / 2)) rotateY(calc(var(--angle) * 180deg - 90deg)) translateZ(calc(var(--width) / 2));
    z-index: 50;
    
    border-left: solid black 10px;
    border-right: solid black 10px;
    background-color: var(--color);
    box-shadow: inset var(--border-color) 0 0 var(--border-width);

    transition-property: var(--angle);
    transition-duration: 0.5s;
}

.modal {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    z-index: 200;

    opacity: 1;
    transition: opacity 0.5s, transform 0.5s;
}

.modal.hidden {
    display: none;
    opacity: 0;
    transform: translate(-50%, -150%);
}

form {
    background-color: white;
    border-radius: 20px;
    padding: 20px;

    display: grid;
    grid-template-columns: min-content min-content;
    gap: 15px 5px;
}

.form-title {
    text-align: center;
    grid-column: 1 / span 2;
}

.error-field {
    grid-column: 1 / span 2;

    padding: 10px;
    
    border-radius: 5px;
    border: solid black 1px;
    background-color: rgba(255, 0, 0, 0.2);
}

.error-field:empty {
    display: none;
}

.form-actions {
    text-align: center;
    grid-column: 1 / span 2;

    display: grid;
    grid-template: min-content / repeat(auto-fit, minmax(10px, 1fr));
    gap: 10px;
}

label {
    text-align: right;
    padding: 5px;
    font-weight: bold;
}

input[type="text"],
textarea {
    padding: 5px;
    border-radius: 5px;
    border: black solid 1px;
    box-shadow: 0 2px 3px inset rgba(0, 0, 0, 0.1);
}

input[type="button"],
input[type="submit"] {
    padding: 5px;

    cursor: pointer;

    border-radius: 5px;
    border: black solid 1px;
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.1);
    background-color: rgb(79, 170, 255);

    color: white;
    font-weight: bold;
}

input[type="button"]:hover,
input[type="submit"]:hover {
    background-color: rgb(125, 192, 255);
}